---
# generated by https://github.com/hashicorp/terraform-plugin-docs
page_title: "{{.Name}} {{.Type}} - {{.ProviderName}}"
subcategory: ""
description: |-
{{ if .Description }}{{ .Description | plainmarkdown | trimspace | prefixlines "  " }}{{ end }}
---

# {{.Name}} ({{.Type}})

{{ if .Description }}{{ .Description | trimspace }}{{ end }}

{{ .SchemaMarkdown | trimspace }}

## Import

Schemas can be imported using the format `tenant/namespace/topic`:

```shell
terraform import {{.Name}}.example my-tenant/my-namespace/my-topic
```

## Notes

### Schema Evolution

- Schema updates create new versions rather than modifying existing schemas
- The `version` field is automatically incremented when schemas are updated
- Pulsar handles schema compatibility validation server-side
- Clients can specify which schema version to use when producing/consuming messages

### Schema Data Requirements

- **Complex types** (`AVRO`, `JSON`, `PROTOBUF`, `PROTOBUF_NATIVE`, `KEY_VALUE`) require `schema_data`
- **Primitive types** (`STRING`, `INT32`, `BOOLEAN`, etc.) do not require `schema_data`
- **Auto types** do not require `schema_data` as they're inferred from message content

### Resource Identity

- The combination of `tenant`, `namespace`, and `topic` forms the unique identity
- These fields cannot be changed after resource creation (marked as `ForceNew`)
- Changing any of these values will destroy and recreate the resource

### Topic Format

- The resource automatically uses the `persistent://` topic format
- Topic names are validated and formatted using Pulsar's naming conventions